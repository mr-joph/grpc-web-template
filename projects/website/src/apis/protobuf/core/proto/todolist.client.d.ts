// @generated by protobuf-ts 2.9.3 with parameter output_javascript_es2018
// @generated from protobuf file "proto/todolist.proto" (package "core", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { DeleteTodoIn } from "./todolist";
import type { CheckTodoOut } from "./todolist";
import type { CheckTodoIn } from "./todolist";
import type { EditTodoOut } from "./todolist";
import type { Todo } from "./todo";
import type { NewTodoOut } from "./todolist";
import type { NewTodoIn } from "./todolist";
import type { GetTodosOut } from "./todolist";
import type { Empty } from "../google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service core.TodoListService
 */
export interface ITodoListServiceClient {
    /**
     * @generated from protobuf rpc: GetTodos(google.protobuf.Empty) returns (core.GetTodosOut);
     */
    getTodos(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetTodosOut>;
    /**
     * @generated from protobuf rpc: NewTodo(core.NewTodoIn) returns (core.NewTodoOut);
     */
    newTodo(input: NewTodoIn, options?: RpcOptions): UnaryCall<NewTodoIn, NewTodoOut>;
    /**
     * @generated from protobuf rpc: EditTodo(core.Todo) returns (core.EditTodoOut);
     */
    editTodo(input: Todo, options?: RpcOptions): UnaryCall<Todo, EditTodoOut>;
    /**
     * @generated from protobuf rpc: CheckTodo(core.CheckTodoIn) returns (core.CheckTodoOut);
     */
    checkTodo(input: CheckTodoIn, options?: RpcOptions): UnaryCall<CheckTodoIn, CheckTodoOut>;
    /**
     * @generated from protobuf rpc: DeleteTodo(core.DeleteTodoIn) returns (google.protobuf.Empty);
     */
    deleteTodo(input: DeleteTodoIn, options?: RpcOptions): UnaryCall<DeleteTodoIn, Empty>;
    /**
     * @generated from protobuf rpc: CompleteAll(google.protobuf.Empty) returns (google.protobuf.Empty);
     */
    completeAll(input: Empty, options?: RpcOptions): UnaryCall<Empty, Empty>;
    /**
     * @generated from protobuf rpc: ClearCompleted(google.protobuf.Empty) returns (google.protobuf.Empty);
     */
    clearCompleted(input: Empty, options?: RpcOptions): UnaryCall<Empty, Empty>;
}
/**
 * @generated from protobuf service core.TodoListService
 */
export declare class TodoListServiceClient implements ITodoListServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * @generated from protobuf rpc: GetTodos(google.protobuf.Empty) returns (core.GetTodosOut);
     */
    getTodos(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetTodosOut>;
    /**
     * @generated from protobuf rpc: NewTodo(core.NewTodoIn) returns (core.NewTodoOut);
     */
    newTodo(input: NewTodoIn, options?: RpcOptions): UnaryCall<NewTodoIn, NewTodoOut>;
    /**
     * @generated from protobuf rpc: EditTodo(core.Todo) returns (core.EditTodoOut);
     */
    editTodo(input: Todo, options?: RpcOptions): UnaryCall<Todo, EditTodoOut>;
    /**
     * @generated from protobuf rpc: CheckTodo(core.CheckTodoIn) returns (core.CheckTodoOut);
     */
    checkTodo(input: CheckTodoIn, options?: RpcOptions): UnaryCall<CheckTodoIn, CheckTodoOut>;
    /**
     * @generated from protobuf rpc: DeleteTodo(core.DeleteTodoIn) returns (google.protobuf.Empty);
     */
    deleteTodo(input: DeleteTodoIn, options?: RpcOptions): UnaryCall<DeleteTodoIn, Empty>;
    /**
     * @generated from protobuf rpc: CompleteAll(google.protobuf.Empty) returns (google.protobuf.Empty);
     */
    completeAll(input: Empty, options?: RpcOptions): UnaryCall<Empty, Empty>;
    /**
     * @generated from protobuf rpc: ClearCompleted(google.protobuf.Empty) returns (google.protobuf.Empty);
     */
    clearCompleted(input: Empty, options?: RpcOptions): UnaryCall<Empty, Empty>;
}
